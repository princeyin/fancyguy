一、height：100%  如果父元素height：auto  此时是无效的  要么给父元素定一个高度，要么你就使用绝对定位--绝对定位的百分比相对于padding-box计算的
二、替换元素：内容可替换，有自己的尺寸，基线为元素的下边缘，改变display值并不会影响尺寸计算规则(固有尺寸<html属性<css属性)
三、object-fit:fill contain cover none保持原尺寸  scale-down:  
   object-position:定义替换元素的填充内容对齐方式：
四、font: 
  1)text-indent:缩进可为负值隐藏内容，
五、content一般在伪元素里使用，其生成的内容渲染在CSSDOM里面，显示的内容都是视觉上的，不能被选取，如果是图片不能被保存
  1）content字符生成图标，还可以插入Unicode字符，比如\A -换行符中的LF字符
  2）content生成base64图片
  3）content闭合符号：配合quotes属性可以指定任意字符 比如：quotes:'aaa' 'fsfjsf';   前一个open-quote  后一个close-quote,当然quotes设定在父元素上
  4）content：attr()
  5)content计数器：counter-reset:name[ n] name n..

六、单位 ex ==一个x字符的高度  ，一般用在小图标的容器元素上  https://demo.cssworld.cn/5/1-1.php
七、line-height  设置行高 == 容器height 为什么可以让内联元素垂直居中，因为默认基线对齐
    如果是多行文字(inline-block)以及替换元素的垂直居中，就不能基线对齐了， 得中间对齐才行 vetical-align:middle;
    line-height:1.5 /150% /1.5em  子元素继承的是1.5 这个数字  后面两个继承的是具体的像素
    行高的上边距计算时 要向下取整，一般字体都会往基线下面移一点
 八、vetical-align:baseline top middle bottom/text-top text-bottom /sub super/数值 半分比 正值往上偏移 负值往下偏移
     字体大小不一致，经常导致父元素的高度比想象中高了几个px,子元素字体比较大，基线往下偏移，基线对齐时，整个元素就会往上以，导致父元素高了
     父元素高度由图片撑起来，为什么在图片底下有空隙？ 图片是内联元素前面有个幽灵空白节点， 空隙就是行高的下半部分
     解决办法：改变对齐方式  变块状 改变line-height  
     替换元素的基线在元素的下边缘  inline-block内容为空或者设置了overflow属性 其基线在margin下边缘
